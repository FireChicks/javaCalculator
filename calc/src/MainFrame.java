
import calc.StackCalc;
import java.util.Stack;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author LeeJanyun
 */
public class MainFrame extends javax.swing.JFrame {
    StackCalc stack = new StackCalc();
    String realMathExp = "";
    String memory1 = "";
    String memory2 = "";
    
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oneInput = new javax.swing.JButton();
        twoInput = new javax.swing.JButton();
        threeInput = new javax.swing.JButton();
        fourInput = new javax.swing.JButton();
        fiveInput = new javax.swing.JButton();
        sixInput = new javax.swing.JButton();
        sevenInput = new javax.swing.JButton();
        eightInput = new javax.swing.JButton();
        nineInput = new javax.swing.JButton();
        zeroInput = new javax.swing.JButton();
        posNegConverter = new javax.swing.JButton();
        commaInput = new javax.swing.JButton();
        plusOperatorInput = new javax.swing.JButton();
        minusOperator = new javax.swing.JButton();
        multiplyOperatorInput = new javax.swing.JButton();
        divdeOperatorInput = new javax.swing.JButton();
        sqrtInput = new javax.swing.JButton();
        percentInput = new javax.swing.JButton();
        toFractions = new javax.swing.JButton();
        exeButton = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        BackSpaceBtn = new javax.swing.JButton();
        clearValueBtn = new javax.swing.JButton();
        memoryClearButton = new javax.swing.JButton();
        memoryReadButton = new javax.swing.JButton();
        memorySaveButton = new javax.swing.JButton();
        memoryToPos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mathExp = new javax.swing.JTextPane();
        startBrace = new javax.swing.JButton();
        endBrace = new javax.swing.JButton();
        memoryToNeg = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        oneInput.setText("1");
        oneInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneInputActionPerformed(evt);
            }
        });

        twoInput.setText("2");
        twoInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoInputActionPerformed(evt);
            }
        });

        threeInput.setText("3");
        threeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeInputActionPerformed(evt);
            }
        });

        fourInput.setText("4");
        fourInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourInputActionPerformed(evt);
            }
        });

        fiveInput.setText("5");
        fiveInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveInputActionPerformed(evt);
            }
        });

        sixInput.setText("6");
        sixInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixInputActionPerformed(evt);
            }
        });

        sevenInput.setText("7");
        sevenInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenInputActionPerformed(evt);
            }
        });

        eightInput.setText("8");
        eightInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightInputActionPerformed(evt);
            }
        });

        nineInput.setText("9");
        nineInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineInputActionPerformed(evt);
            }
        });

        zeroInput.setText("0");
        zeroInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroInputActionPerformed(evt);
            }
        });

        posNegConverter.setFont(new java.awt.Font("맑은 고딕", 0, 10)); // NOI18N
        posNegConverter.setText("+/-");

        commaInput.setText(".");
        commaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commaInputActionPerformed(evt);
            }
        });

        plusOperatorInput.setText("+");
        plusOperatorInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusOperatorInputActionPerformed(evt);
            }
        });

        minusOperator.setText("-");
        minusOperator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusOperatorActionPerformed(evt);
            }
        });

        multiplyOperatorInput.setText("*");
        multiplyOperatorInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyOperatorInputActionPerformed(evt);
            }
        });

        divdeOperatorInput.setText("/");
        divdeOperatorInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divdeOperatorInputActionPerformed(evt);
            }
        });

        sqrtInput.setText("sqrt");
        sqrtInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtInputActionPerformed(evt);
            }
        });

        percentInput.setText("%");
        percentInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentInputActionPerformed(evt);
            }
        });

        toFractions.setText("1/X");
        toFractions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFractionsActionPerformed(evt);
            }
        });

        exeButton.setText("=");
        exeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exeButtonActionPerformed(evt);
            }
        });

        jButton21.setText("Backspace");

        BackSpaceBtn.setText("CE");
        BackSpaceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackSpaceBtnActionPerformed(evt);
            }
        });

        clearValueBtn.setText("C");
        clearValueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearValueBtnActionPerformed(evt);
            }
        });

        memoryClearButton.setText("MC");
        memoryClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryClearButtonActionPerformed(evt);
            }
        });

        memoryReadButton.setText("MR");
        memoryReadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryReadButtonActionPerformed(evt);
            }
        });

        memorySaveButton.setText("MS");
        memorySaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memorySaveButtonActionPerformed(evt);
            }
        });

        memoryToPos.setText("M+");
        memoryToPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryToPosActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(mathExp);

        startBrace.setText("(");
        startBrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBraceActionPerformed(evt);
            }
        });

        endBrace.setText(")");
        endBrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endBraceActionPerformed(evt);
            }
        });

        memoryToNeg.setText("M-");
        memoryToNeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryToNegActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(memoryClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sevenInput)
                                .addGap(18, 18, 18)
                                .addComponent(eightInput)
                                .addGap(18, 18, 18)
                                .addComponent(nineInput))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(memoryReadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(fourInput)
                                        .addGap(18, 18, 18)
                                        .addComponent(fiveInput)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(memorySaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(memoryToPos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(oneInput)
                                                .addGap(18, 18, 18)
                                                .addComponent(twoInput)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(zeroInput)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(posNegConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(threeInput)
                                    .addComponent(sixInput)
                                    .addComponent(commaInput))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(multiplyOperatorInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(percentInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(divdeOperatorInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sqrtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(minusOperator)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(toFractions, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(plusOperatorInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(exeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startBrace, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endBrace, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton21)
                        .addGap(3, 3, 3)
                        .addComponent(BackSpaceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearValueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(memoryToNeg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton21)
                    .addComponent(BackSpaceBtn)
                    .addComponent(clearValueBtn)
                    .addComponent(startBrace)
                    .addComponent(endBrace))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sevenInput)
                    .addComponent(eightInput)
                    .addComponent(nineInput)
                    .addComponent(divdeOperatorInput)
                    .addComponent(sqrtInput)
                    .addComponent(memoryClearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fourInput)
                    .addComponent(fiveInput)
                    .addComponent(sixInput)
                    .addComponent(multiplyOperatorInput)
                    .addComponent(percentInput)
                    .addComponent(memoryReadButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oneInput)
                    .addComponent(twoInput)
                    .addComponent(threeInput)
                    .addComponent(minusOperator)
                    .addComponent(toFractions)
                    .addComponent(memorySaveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commaInput)
                    .addComponent(plusOperatorInput)
                    .addComponent(exeButton)
                    .addComponent(memoryToPos)
                    .addComponent(posNegConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zeroInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memoryToNeg)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oneInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneInputActionPerformed
        mathExp.setText(mathExp.getText() + "1");
        realMathExp += "1";
    }//GEN-LAST:event_oneInputActionPerformed

    private void zeroInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroInputActionPerformed
        mathExp.setText(mathExp.getText() + "0");
        realMathExp += "0";
    }//GEN-LAST:event_zeroInputActionPerformed

    private void twoInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoInputActionPerformed
        mathExp.setText(mathExp.getText() + "2");
        realMathExp += "2";
    }//GEN-LAST:event_twoInputActionPerformed

    private void threeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeInputActionPerformed
        mathExp.setText(mathExp.getText() + "3");
        realMathExp += "3";
    }//GEN-LAST:event_threeInputActionPerformed

    private void fourInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourInputActionPerformed
        mathExp.setText(mathExp.getText() + "4");
        realMathExp += "4";
    }//GEN-LAST:event_fourInputActionPerformed

    private void fiveInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveInputActionPerformed
        mathExp.setText(mathExp.getText() + "5");
        realMathExp += "5";
    }//GEN-LAST:event_fiveInputActionPerformed

    private void sixInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixInputActionPerformed
        mathExp.setText(mathExp.getText() + "6");
        realMathExp += "6";
    }//GEN-LAST:event_sixInputActionPerformed

    private void sevenInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenInputActionPerformed
        mathExp.setText(mathExp.getText() + "7");
        realMathExp += "7";
    }//GEN-LAST:event_sevenInputActionPerformed

    private void eightInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightInputActionPerformed
        mathExp.setText(mathExp.getText() + "8");
        realMathExp += "8";
    }//GEN-LAST:event_eightInputActionPerformed

    private void nineInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineInputActionPerformed
        mathExp.setText(mathExp.getText() + "9");
        realMathExp += "9";
    }//GEN-LAST:event_nineInputActionPerformed

    private void commaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commaInputActionPerformed
        mathExp.setText(mathExp.getText() + ".");
        realMathExp += ".";
    }//GEN-LAST:event_commaInputActionPerformed

    private void plusOperatorInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusOperatorInputActionPerformed
       mathExp.setText(mathExp.getText() + "+");
       realMathExp += "#+#";
    }//GEN-LAST:event_plusOperatorInputActionPerformed

    private void minusOperatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusOperatorActionPerformed
        mathExp.setText(mathExp.getText() + "-");
        realMathExp += "#-#";
    }//GEN-LAST:event_minusOperatorActionPerformed

    private void multiplyOperatorInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyOperatorInputActionPerformed
        mathExp.setText(mathExp.getText() + "*");
        realMathExp += "#*#";
    }//GEN-LAST:event_multiplyOperatorInputActionPerformed

    private void divdeOperatorInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divdeOperatorInputActionPerformed
        mathExp.setText(mathExp.getText() + "/");
        realMathExp += "#/#";
    }//GEN-LAST:event_divdeOperatorInputActionPerformed

    private void sqrtInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtInputActionPerformed
        stack.pushMathExp(realMathExp);
        String result = stack.popMathExp();              
        result = String.format("%.3f",  Math.sqrt(Double.parseDouble(result)));
        mathExp.setText(result);
        realMathExp = result;
        
    }//GEN-LAST:event_sqrtInputActionPerformed

    private void percentInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentInputActionPerformed
        mathExp.setText(mathExp.getText() + "%");
        realMathExp +="%";
    }//GEN-LAST:event_percentInputActionPerformed

    private void toFractionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFractionsActionPerformed
        stack.pushMathExp(realMathExp);
        String result = stack.popMathExp();              
        result = stack.cal( Double.parseDouble(result),1, "/");               
        mathExp.setText(result);
        realMathExp = result;
    }//GEN-LAST:event_toFractionsActionPerformed

    private void exeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exeButtonActionPerformed
             stack.pushMathExp(realMathExp);
             String result = stack.popMathExp();
             mathExp.setText(result);
             realMathExp = result;
    }//GEN-LAST:event_exeButtonActionPerformed

    private void BackSpaceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackSpaceBtnActionPerformed
        if(mathExp.getText() != null && !mathExp.getText().equals("")) {
            mathExp.setText(mathExp.getText().substring(0, mathExp.getText().length() - 1));           
        }
        
        if(realMathExp.charAt(realMathExp.length() - 1 ) == '#') {
            for(int i=0; i<3; i++){
            realMathExp = realMathExp.substring(0, realMathExp.length() - 1);
            }
        } else{
            realMathExp = realMathExp.substring(0, realMathExp.length() - 1);
        }
    }//GEN-LAST:event_BackSpaceBtnActionPerformed

    private void clearValueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearValueBtnActionPerformed
        mathExp.setText("");
        realMathExp = "";
    }//GEN-LAST:event_clearValueBtnActionPerformed

    private void startBraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBraceActionPerformed
       mathExp.setText(mathExp.getText() + "(");
        realMathExp += "#(#";
    }//GEN-LAST:event_startBraceActionPerformed

    private void endBraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endBraceActionPerformed
        mathExp.setText(mathExp.getText() + ")");
        realMathExp += "#)#";
    }//GEN-LAST:event_endBraceActionPerformed

    private void memoryClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryClearButtonActionPerformed
        memory1 = "";
    }//GEN-LAST:event_memoryClearButtonActionPerformed

    private void memoryReadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryReadButtonActionPerformed
        if(memory1.equals("")){
            JOptionPane.showMessageDialog(null, "메모리에 값이 저장되어 있지 않습니다!");
            return;
        }       
        if(Double.parseDouble(memory1) < 0) {           
            mathExp.setText(mathExp.getText() + memory1);
            memory1 = Double.toString(Double.parseDouble(memory1) * -1);
            realMathExp += "#-#"+ memory1;
            memory1 = Double.toString(Double.parseDouble(memory1) * -1);
        }else {
            mathExp.setText(mathExp.getText() + memory1);
            realMathExp += memory1;
        }
    }//GEN-LAST:event_memoryReadButtonActionPerformed

    private void memorySaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memorySaveButtonActionPerformed
         stack.pushMathExp(realMathExp);
             String result = stack.popMathExp();
             memory1 = result;
             mathExp.setText("");
             realMathExp = "";
    }//GEN-LAST:event_memorySaveButtonActionPerformed

    private void memoryToPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryToPosActionPerformed
        if(Double.parseDouble(memory1) < 0) {
        memory1 = Double.toString(Double.parseDouble(memory1) * -1);
        }
    }//GEN-LAST:event_memoryToPosActionPerformed

    private void memoryToNegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryToNegActionPerformed
        if(Double.parseDouble(memory1) > 0) {
        memory1 = Double.toString(Double.parseDouble(memory1) * -1);
        }
    }//GEN-LAST:event_memoryToNegActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackSpaceBtn;
    private javax.swing.JButton clearValueBtn;
    private javax.swing.JButton commaInput;
    private javax.swing.JButton divdeOperatorInput;
    private javax.swing.JButton eightInput;
    private javax.swing.JButton endBrace;
    private javax.swing.JButton exeButton;
    private javax.swing.JButton fiveInput;
    private javax.swing.JButton fourInput;
    private javax.swing.JButton jButton21;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane mathExp;
    private javax.swing.JButton memoryClearButton;
    private javax.swing.JButton memoryReadButton;
    private javax.swing.JButton memorySaveButton;
    private javax.swing.JButton memoryToNeg;
    private javax.swing.JButton memoryToPos;
    private javax.swing.JButton minusOperator;
    private javax.swing.JButton multiplyOperatorInput;
    private javax.swing.JButton nineInput;
    private javax.swing.JButton oneInput;
    private javax.swing.JButton percentInput;
    private javax.swing.JButton plusOperatorInput;
    private javax.swing.JButton posNegConverter;
    private javax.swing.JButton sevenInput;
    private javax.swing.JButton sixInput;
    private javax.swing.JButton sqrtInput;
    private javax.swing.JButton startBrace;
    private javax.swing.JButton threeInput;
    private javax.swing.JButton toFractions;
    private javax.swing.JButton twoInput;
    private javax.swing.JButton zeroInput;
    // End of variables declaration//GEN-END:variables

}
